# $Id$  
#
#  Makefile.am
# 
#  (C) Copyright IBM Corp. 2005
# 
#  THIS FILE IS PROVIDED UNDER THE TERMS OF THE ECLIPSE PUBLIC LICENSE
#  ("AGREEMENT"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS FILE
#  CONSTITUTES RECIPIENTS ACCEPTANCE OF THE AGREEMENT.
# 
#  You can obtain a current copy of the Eclipse Public License from
#  http://www.opensource.org/licenses/eclipse-1.0.php
# 
#  Author:        Viktor Mihajlovski <mihajlov@de.ibm.com>
#  Contributions: Adrian Schuur <schuur@de.ibm.com>
#                 Sven Schuetz <sven@de.ibm.com>
# 
#  Description:
# 
#  Makefile process input for sfcb.
# 
# 

sfcbdocdir=$(datadir)/doc/sfcb-$(VERSION)
sfcbdatadir=$(datadir)/sfcb
sfcbconfdir=$(sysconfdir)/sfcb
sfcbstatedir=$(localstatedir)/lib/sfcb
initdir=$(sysconfdir)/init.d

MANFILES=man/genSslCert.1 man/getSchema.1 man/sfcbd.1 man/sfcbmof.1 \
	man/sfcbrepos.1 man/sfcbstage.1 man/sfcbunstage.1 man/sfcbuuid.1 \
	man/wbemcat.1 man/xmltest.1

BUILT_SOURCES=queryParser.c queryLexer.c sqlParser.c sqlLexer.c cimXmlOps.c cimXmlParserProcessed.c $(MANFILES)

AM_YFLAGS=-d

AM_CPPFLAGS=-DSFCB_CONFDIR=\"$(sfcbconfdir)\" \
	-DSFCB_STATEDIR=\"$(sfcbstatedir)\" \
	-DSFCB_LIBDIR=\"$(libdir)\" \
	-DSFCB_BINARY=\"$(sbindir)/sfcbd\" \
	-I$(srcdir)/sfcUtil \
	@SFCB_CPPFLAGS@
AM_CFLAGS=@SFCB_CFLAGS@
AM_LDFLAGS=@SFCB_LDFLAGS@

SUBDIRS=. $(MOFC_DIR)

if INDICATIONS
INDICATION_LIBS = libsfcIndCIMXMLHandler.la
else
INDICATION_LIBS =
endif

if SLP
SLP_LIBS = libslpAgent.la
SLP_LIB = -lslpAgent
else
SLP_LIBS =
SLP_LIB =
endif

if QUALREP
QUALREP_LIBS = libsfcQualifierProvider.la
QUALREP_FILES = qualifier.c
QUALREP_HEADER = qualifier.h
else
QUALREP_LIBS = 
QUALREP_FILES =
QUALREP_HEADER =
endif

if JDBC
JDBC_FILES = \
    dbpAdapter.c \
    sqlLexer.l \
    sqlParser.y \
    sqlStatement.c \
    avltree.c
else
JDBC_FILES =
endif

lib_LTLIBRARIES = \
   libsfcUtil.la \
   libsfcBrokerCore.la \
   libsfcFileRepository.la \
   libsfcInternalProvider.la \
   libsfcInteropProvider.la \
   libsfcInteropServerProvider.la \
   libsfcClassProvider.la \
   libsfcClassProviderGz.la \
   libsfcClassProviderMem.la \
   libsfcCimXmlCodec.la \
   libsfcHttpAdapter.la \
   libsfcBasicAuthentication.la \
   libsfcCertificateAuthentication.la \
   libsfcObjectImplSwapI32toP32.la \
   libcimcClientSfcbLocal.la \
   $(QUALREP_LIBS) \
   $(SLP_LIBS) \
   $(INDICATION_LIBS)

if SLP_ALONE
SLP_PROGRAMFILES = cimslp
cimslp_SOURCES = \
	cimslp.c \
	cimslpCMPI.c \
	cimslpSLP.c \
	cimslpUtil.c 

cimslp_LDADD=-lslp -lcmpisfcc
else
SLP_PROGRAMFILES = 
endif

sbin_PROGRAMS = \
   sfcbd 

bin_PROGRAMS = \
   sfcbmofpp sfcbdump $(SLP_PROGRAMFILES)

noinst_PROGRAMS = \
   sfcbdumpP32onI32 classSchema2c

libsfcUtil_la_SOURCES = \
	sfcUtil/hashtable.c \
	sfcUtil/utilFactory.c \
	sfcUtil/utilHashtable.c \
	sfcUtil/utilStringBuffer.c

libsfcBrokerCore_la_SOURCES = \
    args.c \
    array.c \
    brokerEnc.c \
    brokerUpc.c \
    brokerOs.c \
    context.c \
    datetime.c \
    enumeration.c \
    instance.c \
    objectpath.c \
    result.c \
    selectexp.c \
    selectcond.c \
    subcond.c \
    predicate.c \
    string.c \
    value.c \
    support.c \
    providerRegister.c \
    objectImpl.c \
    constClass.c \
    genericlist.c \
    msgqueue.c \
    providerMgr.c \
    providerDrv.c \
    trace.c \
    control.c \
    queryParser.y \
    queryLexer.l \
    queryOperation.c \
    queryStatement.c \
    cimXmlGen.c \
    mrwlock.c \
    mlog.c \
    $(JDBC_FILES) \
    $(QUALREP_FILES)

libsfcBrokerCore_la_CFLAGS = $(AM_CFLAGS) @SFCB_CMPI_OS@ @SFCB_CMPI_PLATFORM@ 
libsfcBrokerCore_la_LIBADD=-lsfcUtil
libsfcBrokerCore_la_DEPENDENCIES=libsfcUtil.la

if JDBC
sqlLexer.c: $(srcdir)/sqlLexer.l
	$(LEX) -t $< | sed -e "s/yy/sfcSql/g" > $@

sqlParser.c: $(srcdir)/sqlParser.y
	$(YACC) $(AM_YFLAGS) -p sfcSql -o $@ $< 
endif

queryLexer.c: $(srcdir)/queryLexer.l
	$(LEX) -t $< | sed -e "s/yy/sfcQuery/g" > $@

queryParser.c: $(srcdir)/queryParser.y
	$(YACC) $(AM_YFLAGS) -p sfcQuery -o $@ $< 

cimXmlOps.c: $(srcdir)/cimXmlOps.y
	$(YACC) $(AM_YFLAGS) -p sfcXml -o $@ $< 

cimXmlParserProcessed.c: $(srcdir)/cimXmlParser.c
	sed -e "s/yy/sfcXml/g" $< > $@

libcimcClientSfcbLocal_la_SOURCES = \
   cimcClientSfcbLocal.c
libcimcClientSfcbLocal_la_LIBADD=-lsfcBrokerCore
libcimcClientSfcbLocal_la_DEPENDENCIES=libsfcBrokerCore.la

libsfcFileRepository_la_SOURCES = \
	fileRepository.c
libsfcFileRepository_la_LIBADD=-lsfcBrokerCore	
libsfcFileRepository_la_DEPENDENCIES=libsfcBrokerCore.la

libsfcHttpAdapter_la_SOURCES = \
   httpAdapter.c \
   httpComm.c
libsfcHttpAdapter_la_LIBADD=-lsfcBrokerCore -lsfcCimXmlCodec
libsfcHttpAdapter_la_DEPENDENCIES=libsfcBrokerCore.la libsfcCimXmlCodec.la

libsfcBasicAuthentication_la_SOURCES = \
   sfcBasicAuthentication.c

libsfcCertificateAuthentication_la_SOURCES = \
   sfcCertificateAuthentication.c

libsfcInternalProvider_la_SOURCES = \
   internalProvider.c
libsfcInternalProvider_la_LIBADD=-lsfcBrokerCore -lsfcFileRepository
libsfcInternalProvider_la_DEPENDENCIES=libsfcBrokerCore.la libsfcFileRepository.la

libsfcObjectImplSwapI32toP32_la_SOURCES = \
   objectImplSwapI32toP32.c 
libsfcObjectImplSwapI32toP32_la_LIBADD=-lsfcBrokerCore
libsfcObjectImplSwapI32toP32_la_DEPENDENCIES=libsfcBrokerCore.la

libsfcInteropProvider_la_SOURCES = \
   interopProvider.c 
libsfcInteropProvider_la_LIBADD=-lsfcBrokerCore -lsfcInternalProvider
libsfcInteropProvider_la_DEPENDENCIES=libsfcBrokerCore.la libsfcInternalProvider.la

libsfcInteropServerProvider_la_SOURCES = \
   interopServerProvider.c 
libsfcInteropServerProvider_la_LIBADD=-lsfcBrokerCore 
libsfcInteropServerProvider_la_DEPENDENCIES=libsfcBrokerCore.la

libsfcIndCIMXMLHandler_la_SOURCES = \
   indCIMXMLHandler.c \
   indCIMXMLExport.c 
libsfcIndCIMXMLHandler_la_LIBADD=-lsfcBrokerCore -lsfcInternalProvider -lsfcCimXmlCodec -lsfcHttpAdapter
libsfcIndCIMXMLHandler_la_DEPENDENCIES=libsfcBrokerCore.la libsfcInternalProvider.la \
	libsfcCimXmlCodec.la libsfcHttpAdapter.la

libsfcClassProviderGz_la_SOURCES = \
   classProviderGz.c
libsfcClassProviderGz_la_LIBADD=-lsfcBrokerCore @SFCB_LIBZ@
libsfcClassProviderGz_la_DEPENDENCIES=libsfcBrokerCore.la

libsfcClassProvider_la_SOURCES = \
   classProvider.c
libsfcClassProvider_la_LIBADD=-lsfcBrokerCore
libsfcClassProvider_la_DEPENDENCIES=libsfcBrokerCore.la

libsfcClassProviderMem_la_SOURCES = \
   classProviderMem.c classSchemaMem.c interop_classSchema.c
libsfcClassProviderMem_la_LIBADD=-lsfcBrokerCore
libsfcClassProviderMem_la_DEPENDENCIES=libsfcBrokerCore.la

libsfcCimXmlCodec_la_SOURCES = \
   cimXmlOps.y \
   cimXmlParserProcessed.c \
   cimXmlRequest.c 
libsfcCimXmlCodec_la_LIBADD=-lsfcBrokerCore 
libsfcCimXmlCodec_la_DEPENDENCIES=libsfcBrokerCore.la

if SLP
libslpAgent_la_CFLAGS = $(AM_CFLAGS)
libslpAgent_la_SOURCES = \
    cimslp.c \
    cimslpCMPI.c \
    cimslpSLP.c \
    cimslpUtil.c
libslpAgent_la_LIBADD=-lslp -lcmpisfcc
endif

if QUALREP
libsfcQualifierProvider_la_SOURCES = \
   qualifierProvider.c
libsfcQualifierProvider_la_LIBADD=-lsfcBrokerCore -lsfcFileRepository
libsfcQualifierProvider_la_DEPENDENCIES=libsfcBrokerCore.la libsfcFileRepository.la
endif

sfcbd_SOURCES=sfcBroker.c
sfcbd_LDADD=-lsfcBrokerCore -lsfcCimXmlCodec -lsfcHttpAdapter $(SLP_LIB)
sfcbd_DEPENDENCIES=libsfcBrokerCore.la libsfcCimXmlCodec.la libsfcHttpAdapter.la

sfcbmofpp_SOURCES=mofpp.c

sfcbdump_SOURCES=sfcbdump.c

classSchema2c_SOURCES=classSchema2c.c
classSchema2c_LDADD=-lsfcBrokerCore
classSchema2c_DEPENDENCIES=libsfcBrokerCore.la

noinst_HEADERS=array.h   httpComm.h control.h    providerMgr.h \
	constClass.h   msgqueue.h     providerRegister.h \
	cimXmlParser.h    native.h       support.h cimXmlGen.h \
	cimXmlRequest.h  genericlist.h  objectImpl.h   trace.h \
	sfcUtil/hashtable.h      sfcUtil/utilft.h mlog.h \
	cmpidt.h cmpift.h cmpiftx.h cmpimacs.h cmpimacsx.h cmpios.h \
	fileRepository.h internalProvider.h \
	selectexp.h queryOperation.h \
	sfcVersion.h mrwlock.h sqlStatement.h avltree.h \
       cimcClientSfcbLocal.h $(QUALREP_HEADER) cmpidtx.h classSchemaMem.h


man_MANS=$(MANFILES)

EXTRA_DIST=sfcb.cfg.pre.in sfcb.spec sfcbrepos.sh.in sfcbstage.sh.in \
	sfcbunstage.sh.in sfcbuuid.sh.in sfcb.init-redhat.in sfcb.init-suse.in \
	sfcb.init-none.in cimXmlParser.c

sfcbconf_DATA=sfcb.cfg

dist_sfcbdata_SCRIPTS=genSslCert.sh getSchema.sh

dist_sfcbdata_DATA=default.reg interop.mof indication.mof

nodist_bin_SCRIPTS=sfcbrepos sfcbstage sfcbunstage sfcbuuid

dist_bin_SCRIPTS=wbemcat xmltest

init_SCRIPTS=sfcb

sfcbdoc_DATA=README AUTHORS COPYING

SUFFIXES = .1 .1.pre

.1.pre.1:
	sed -e s?$$\{prefix\}?$(prefix)?g \
	-e s?$$\{exec_prefix\}?$(prefix)?g $< > $@

sfcbrepos: sfcbrepos.sh
	sed -e s?$$\{prefix\}?$(prefix)?g \
	-e s?$$\{exec_prefix\}?$(prefix)?g $< > $@

sfcbstage: sfcbstage.sh
	sed -e s?$$\{prefix\}?$(prefix)?g \
	-e s?$$\{exec_prefix\}?$(prefix)?g $< > $@

sfcbunstage: sfcbunstage.sh
	sed -e s?$$\{prefix\}?$(prefix)?g \
	-e s?$$\{exec_prefix\}?$(prefix)?g $< > $@

sfcbuuid: sfcbuuid.sh
	sed -e s?$$\{prefix\}?$(prefix)?g \
	-e s?$$\{exec_prefix\}?$(prefix)?g $< > $@

sfcb.cfg: sfcb.cfg.pre
	sed -e s?$$\{prefix\}?$(prefix)?g \
	-e s?$$\{exec_prefix\}?$(prefix)?g $< > $@

getSchema.sh: getSchema.sh.pre
	sed -e s?$$\{prefix\}?$(prefix)?g \
	-e s?$$\{exec_prefix\}?$(prefix)?g $< > $@

sfcb: sfcb.$(INIT_STYLE)
	sed -e s?$$\{prefix\}?$(prefix)?g \
	-e s?$$\{exec_prefix\}?$(prefix)?g $< > $@

providerRegister: providerRegister.c
	touch $@

unittest:
	cd test && sh check_all.sh

install-data-local:
	test -d $(DESTDIR)$(sfcbstatedir)/registration/repository || $(mkdir_p) $(DESTDIR)$(sfcbstatedir)/registration/repository
	test -d $(DESTDIR)$(sfcbstatedir)/stage/mofs/root/interop || $(mkdir_p) $(DESTDIR)$(sfcbstatedir)/stage/mofs/root/interop
	test -d $(DESTDIR)$(sfcbstatedir)/stage/regs || $(mkdir_p) $(DESTDIR)$(sfcbstatedir)/stage/regs
	$(INSTALL_DATA) $(srcdir)/default.reg $(DESTDIR)$(sfcbstatedir)/stage
	$(INSTALL_DATA) $(srcdir)/interop.mof $(DESTDIR)$(sfcbstatedir)/stage/mofs/root/interop
if INDICATIONS
	$(INSTALL_DATA) $(srcdir)/indication.mof $(DESTDIR)$(sfcbstatedir)/stage/mofs
endif

uninstall-local:
	rm -f $(DESTDIR)$(sfcbstatedir)/stage/default.reg
	rm -f $(DESTDIR)$(sfcbstatedir)/stage/root/interop/interop.mof
if INDICATIONS
	rm -f $(DESTDIR)$(sfcbstatedir)/stage/mofs/indication.mof
endif

clean-local:
	rm -f sfcbrepos sfcbstage sfcbunstage sfcbuuid sfcb.cfg getSchema.sh sfcb \
		sfcb.init-redhat sfcb.init-suse sfcb.init-none \
		$(MANFILES)

dist-hook:
	test -d "$(distdir)" &&	rm -rf `find $(distdir) -type d -name CVS`

install-cimschema: getSchema.sh
	test -d $(DESTDIR)$(sfcbdatadir) || $(mkdir_p) $(DESTDIR)$(sfcbdatadir)
	sh getSchema.sh -f $(DESTDIR)$(sfcbdatadir)

postinstall: install-cimschema
	test -f $(DESTDIR)$(sfcbstatedir)/registration/providerRegister || $(INSTALL_DATA) $(DESTDIR)$(sfcbstatedir)/stage/default.reg $(DESTDIR)$(sfcbstatedir)/registration/providerRegister 

