To server: <?xml version="1.0" encoding="utf-8" ?>
<CIM CIMVERSION="2.0" DTDVERSION="2.0">
<MESSAGE ID="4711" PROTOCOLVERSION="1.0"><SIMPLEREQ><IMETHODCALL NAME="GetClass">
<LOCALNAMESPACEPATH>
<NAMESPACE NAME="root"/>
<NAMESPACE NAME="tests"/>
</LOCALNAMESPACEPATH>
<IPARAMVALUE NAME="ClassName"><CLASSNAME NAME="CWS_PlainFile"/></IPARAMVALUE>
<IPARAMVALUE NAME="LocalOnly"><VALUE>FALSE</VALUE></IPARAMVALUE>
<IPARAMVALUE NAME="IncludeQualifiers"><VALUE>TRUE</VALUE></IPARAMVALUE>
<IPARAMVALUE NAME="IncludeClassOrigin"><VALUE>TRUE</VALUE></IPARAMVALUE>
</IMETHODCALL></SIMPLEREQ>
</MESSAGE></CIM>
From server: 
<?xml version="1.0" encoding="utf-8" ?>
<CIM CIMVERSION="2.0" DTDVERSION="1.1">
<MESSAGE ID="4711" PROTOCOLVERSION="1.0">
<SIMPLERSP>
<IMETHODRESPONSE NAME="GetClass">
<IRETURNVALUE>
<CLASS NAME="CWS_PlainFile" SUPERCLASS="CIM_DataFile">
<QUALIFIER NAME="Version" TYPE="string">
<VALUE>2.6.0</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Class representing plain files. We are not inheriting from UnixFile in order to avoid unnecessary complexities with FileIdentity</VALUE>
</QUALIFIER>
<PROPERTY NAME="ElementName" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A user-friendly name for the object. This property allows each instance to define a user-friendly name IN ADDITION TO its key properties/identity data, and description information. \nNote that ManagedSystemElement&apos;s Name property is also defined as a user-friendly name. But, it is often subclassed to be a Key. It is not reasonable that the same property can convey both identity and a user friendly name, without inconsistencies. Where Name exists and is not a Key (such as for instances of LogicalDevice), the same information MAY be present in both the Name and ElementName properties.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="Description" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The Description property provides a textual description of the object.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="Caption" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The Caption property is a short textual description (one- line string) of the object.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>64</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="InstallDate" TYPE="datetime">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A datetime value indicating when the object was installed. A lack of a value does not indicate that the object is not installed.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
</QUALIFIER>
</PROPERTY>
<PROPERTY.ARRAY NAME="OperationalStatus" TYPE="uint16">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Indicates the current status(es) of the element. Various health and operational statuses are defined. Many of the enumeration&apos;s values are self- explanatory. However, a few are not and are described in more detail. \n\&quot;Stressed\&quot; indicates that the element is functioning, but needs attention. Examples of \&quot;Stressed\&quot; states are overload, overheated, etc. \n\&quot;Predictive Failure\&quot; indicates that an element is functioning nominally but predicting a failure in the near future. \n\&quot;In Service\&quot; describes an element being configured, maintained, cleaned, or otherwise administered. \n\&quot;No Contact\&quot; indicates that the monitoring system has knowledge of this element, but has never been able to establish communications with it. \n\&quot;Lost Communication\&quot; indicates that the ManagedSystem Element is known to exist and has been contacted successfully in the past, but is currently unreachable. \n\&quot;Stopped\&quot; and \&quot;Aborted\&quot; are similar, although the former implies a clean and orderly stop, while the latter implies an abrupt stop where the element&apos;s state and configuration may need to be updated. \n\&quot;Dormant\&quot; indicates that the element is inactive or quiesced. \n\&quot;Supporting Entity in Error\&quot; describes that this element may be \&quot;OK\&quot; but that another element, on which it is dependent, is in error. An example is a network service or endpoint that cannot function due to lower layer networking problems. \n\&quot;Completed\&quot; indicates the element has completed its operation. This value should be combined with either OK, Error, or Degraded so that a client can till if the complete operation passed (Completed with OK), and failure (Completed with Error). Completed with Degraded would imply the operation finished, but did not complete OK or report an error. \n\&quot;Power Mode\&quot; indicates the element has additional power model information contained in the Associated PowerManagementService association. \nOperationalStatus replaces the Status property on ManagedSystemElement to provide a consistent approach to enumerations, to address implementation needs for an array property, and to provide a migration path from today&apos;s environment to the future. This change was not made earlier since it required the DEPRECATED qualifier. Due to the widespread use of the existing Status property in management applications, it is strongly RECOMMENDED that providers/instrumentation provide BOTH the Status and OperationalStatus properties. Further, the first value of OperationalStatus SHOULD contain the primary status for the element. When instrumented, Status (since it is single-valued) SHOULD also provide the primary status of the element.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ValueMap" TYPE="string">
</QUALIFIER>
<QUALIFIER NAME="Values" TYPE="string">
</QUALIFIER>
<QUALIFIER NAME="ArrayType" TYPE="string">
<VALUE>Indexed</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ModelCorrespondence" TYPE="string">
</QUALIFIER>
</PROPERTY.ARRAY>
<PROPERTY.ARRAY NAME="StatusDescriptions" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Strings describing the various OperationalStatus array values. For example, if \&quot;Stopping\&quot; is the value assigned to OperationalStatus, then this property may contain an explanation as to why an object is being stopped. Note that entries in this array are correlated with those at the same array index in OperationalStatus.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ArrayType" TYPE="string">
<VALUE>Indexed</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ModelCorrespondence" TYPE="string">
</QUALIFIER>
</PROPERTY.ARRAY>
<PROPERTY NAME="Status" TYPE="string">
<QUALIFIER NAME="Deprecated" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A string indicating the current status of the object. Various operational and non-operational statuses are defined. This property is deprecated in lieu of OperationalStatus, which includes the same semantics in its enumeration. This change is made for 3 reasons: 1) Status is more correctly defined as an array. This overcomes the limitation of describing status via a single value, when it is really a multi-valued property (for example, an element may be OK AND Stopped. 2) A MaxLen of 10 is too restrictive and leads to unclear enumerated values. And, 3) The change to a uint16 data type was discussed when CIM V2.0 was defined. However, existing V1.0 implementations used the string property and did not want to modify their code. Therefore, Status was grandfathered into the Schema. Use of the Deprecated qualifier allows the maintenance of the existing property, but also permits an improved definition using OperationalStatus.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ValueMap" TYPE="string">
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>10</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="CompressionMethod" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A free form string indicating the algorithm or tool used to compress the LogicalFile. If it is not possible or not desired to describe the compression scheme (perhaps because it is not known), recommend using the following words: \&quot;Unknown\&quot; to represent that it is not known whether the LogicalFile is compressed or not, \&quot;Compressed\&quot; to represent that the File is compressed but either its compression scheme is not known or not disclosed, and \&quot;Not Compressed\&quot; to represent that the LogicalFile is not compressed.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="EncryptionMethod" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A free form string indicating the algorithm or tool used to encrypt the LogicalFile. If it is not possible or not desired to describe the encryption scheme (perhaps for security reasons), recommend using the following words: \&quot;Unknown\&quot; to represent that it is not known whether the LogicalFile is encrypted or not, \&quot;Encrypted\&quot; to represent that the File is encrypted but either its encryption scheme is not known or not disclosed, and \&quot;Not Encrypted\&quot; to represent that the LogicalFile is not encrypted.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="InUseCount" TYPE="uint64">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Integer indicating the number of &apos;file opens&apos; that are currently active against the File.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Counter" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="CSCreationClassName" TYPE="string">
<QUALIFIER NAME="Key" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Propagated" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>256</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The scoping ComputerSystem&apos;s CreationClassName.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="CSName" TYPE="string">
<QUALIFIER NAME="Key" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Propagated" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>256</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The scoping ComputerSystem&apos;s Name.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="FSCreationClassName" TYPE="string">
<QUALIFIER NAME="Key" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Propagated" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>256</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The scoping FileSystem&apos;s CreationClassName.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="FSName" TYPE="string">
<QUALIFIER NAME="Key" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Propagated" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>256</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The scoping FileSystem&apos;s Name.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="CreationClassName" TYPE="string">
<QUALIFIER NAME="Key" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>256</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="Name" TYPE="string">
<QUALIFIER NAME="Key" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Override" TYPE="string">
<VALUE>Name</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>1024</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The inherited Name serves as part of the key of a LogicalFile instance within a FileSystem. A unique identifier (such as a full path name) is required as a Name value.  Since Files are weak to their FileSystem (and not to a Directory which would provide a more granular naming algorithm), care must be taken to make LogicalFile&apos;s Name unique for a given CreationClassName and FileSystem. A full path name is one way to do this.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="FileSize" TYPE="uint64">
<QUALIFIER NAME="Gauge" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Size of the File in bytes.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>Bytes</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="CreationDate" TYPE="datetime">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>File&apos;s creation date.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="LastModified" TYPE="datetime">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Time that the File was last modified.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="LastAccessed" TYPE="datetime">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Time that the File was last accessed.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="Readable" TYPE="boolean">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Boolean indicating that the File can be read.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="Writeable" TYPE="boolean">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Boolean indicating that the File can be written.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="Executable" TYPE="boolean">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Indicates the file is executable.</VALUE>
</QUALIFIER>
</PROPERTY>
</CLASS>
</IRETURNVALUE>
</IMETHODRESPONSE>
</SIMPLERSP>
</MESSAGE>
</CIM>
To server: <?xml version="1.0" encoding="utf-8" ?>
<CIM CIMVERSION="2.0" DTDVERSION="2.0">
<MESSAGE ID="4711" PROTOCOLVERSION="1.0"><SIMPLEREQ><METHODCALL NAME="fileType"><LOCALINSTANCEPATH><LOCALNAMESPACEPATH><NAMESPACE NAME="root"/><NAMESPACE NAME="tests"/></LOCALNAMESPACEPATH><INSTANCENAME CLASSNAME="CWS_PlainFile"><KEYBINDING NAME="CreationClassName"><KEYVALUE VALUETYPE="string">CWS_Directory</KEYVALUE></KEYBINDING><KEYBINDING NAME="CSCreationClassName"><KEYVALUE VALUETYPE="string">CIM_UnitaryComputerSystem</KEYVALUE></KEYBINDING><KEYBINDING NAME="CSName"><KEYVALUE VALUETYPE="string">localhost</KEYVALUE></KEYBINDING><KEYBINDING NAME="FSCreationClassName"><KEYVALUE VALUETYPE="string">CIM_FileSystem</KEYVALUE></KEYBINDING><KEYBINDING NAME="FSName"><KEYVALUE VALUETYPE="string">/Simulated/CMPI/tests/</KEYVALUE></KEYBINDING><KEYBINDING NAME="Name"><KEYVALUE VALUETYPE="string">/Simulated/CMPI/tests/Providers</KEYVALUE></KEYBINDING></INSTANCENAME></LOCALINSTANCEPATH></METHODCALL></SIMPLEREQ>
</MESSAGE></CIM>
From server: 
<?xml version="1.0" encoding="utf-8" ?>
<CIM CIMVERSION="2.0" DTDVERSION="1.1">
<MESSAGE ID="4711" PROTOCOLVERSION="1.0">
<SIMPLERSP>
<METHODRESPONSE NAME="fileType">
<RETURNVALUE>
<VALUE>directory</VALUE>
</RETURNVALUE>
</METHODRESPONSE>
</SIMPLERSP>
</MESSAGE>
</CIM>
localhost:5988/root/tests:CWS_PlainFile.CreationClassName="CWS_Directory",CSCreationClassName="CIM_UnitaryComputerSystem",CSName="localhost",FSCreationClassName="CIM_FileSystem",FSName="/Simulated/CMPI/tests/",Name="/Simulated/CMPI/tests/Providers" fileType: directory

