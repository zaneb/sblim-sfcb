<?xml version="1.0" encoding="utf-8" ?>
<CIM CIMVERSION="2.0" DTDVERSION="2.0">
<MESSAGE ID="4711" PROTOCOLVERSION="1.0">
<SIMPLERSP>
<IMETHODRESPONSE NAME="GetClass">
<IRETURNVALUE>
<CLASS NAME="Linux_OperatingSystem" SUPERCLASS="CIM_OperatingSystem">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>An OperatingSystem is software/firmware that makes a ComputerSystem\&apos;s hardware usable, and implements and/or manages the resources, file systems, processes, user interfaces, services, ... available on the ComputerSystem.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="UMLPackagePath" TYPE="string">
<VALUE>CIM::System::OperatingSystem</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Version" TYPE="string">
<VALUE>2.7.0</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Provider" TYPE="string">
<VALUE>cmpi:cmpiOSBase_OperatingSystemProvider</VALUE>
</QUALIFIER>
<PROPERTY NAME="MaxProcessesPerUser" TYPE="uint32">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A value that indicates the maximum processes that a user can have associate with it.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="Distributed" TYPE="boolean">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Boolean indicating whether the OperatingSystem is distributed across several ComputerSystem nodes. If so, these nodes should be grouped as a Cluster.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="MaxProcessMemorySize" TYPE="uint64">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Maximum number of Kbytes of memory that can be allocated to a Process. For Operating Systems with no virtual memory, this value is typically equal to the total amount of physical Memory minus memory used by the BIOS and OS. For some Operating Systems, this value may be infinity - in which case, 0 should be entered. In other cases, this value could be a constant - for example, 2G or 4G.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>KiloBytes</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="FreeSpaceInPagingFiles" TYPE="uint64">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The total number of KBytes that can be mapped into the OperatingSystem\&apos;s paging files without causing any other pages to be swapped out. 0 indicates that there are no paging files.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>KiloBytes</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Gauge" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|System Memory Settings|001.4</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="SizeStoredInPagingFiles" TYPE="uint64">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The total number of KBytes that can be stored in the OperatingSystem\&apos;s paging files. 0 indicates that there are no paging files.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>KiloBytes</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|System Memory Settings|001.3</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="TotalVisibleMemorySize" TYPE="uint64">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The total amount of physical memory (in Kbytes) available to the OperatingSystem. This value does not necessarily indicate the true amount of physical memory, but what is reported to the OperatingSystem as available to it.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>KiloBytes</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="FreePhysicalMemory" TYPE="uint64">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Number of Kbytes of physical memory currently unused and available.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>KiloBytes</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Gauge" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|System Memory Settings|001.2</VALUE>
<VALUE>MIF.UNIX|Host Physical Memory|6.1</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="FreeVirtualMemory" TYPE="uint64">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Number of Kbytes of virtual memory currently unused and available. For example, this may be calculated by adding the amount of free RAM to the amount of free paging space (ie, adding the properties, FreePhysicalMemory and FreeSpace InPagingFiles).</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>KiloBytes</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Gauge" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|System Memory Settings|001.6</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="TotalVirtualMemorySize" TYPE="uint64">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Number of Kbytes of virtual memory. For example, this may be calculated by adding the amount of total RAM to the amount of paging space (ie, adding the amount of memory in/aggregated by the ComputerSystem to the property, SizeStoredInPagingFiles.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>KiloBytes</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|System Memory Settings|001.5</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="TotalSwapSpaceSize" TYPE="uint64">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Total swap space in Kbytes. This value may be NULL (unspecified) if swap space is not distinguished from page files. However, some Operating Systems distinguish these concepts. For example, in UNIX, whole processes can be \&apos;swapped out\&apos; when the free page list falls and remains below a specified amount.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>KiloBytes</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="MaxNumberOfProcesses" TYPE="uint32">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Maximum number of process contexts the OperatingSystem can support. If there is no fixed maximum, the value should be 0. On systems that have a fixed maximum, this object can help diagnose failures that occur when the maximum is reached.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|Host System|001.6</VALUE>
<VALUE>MIB.IETF|HOST-RESOURCES-MIB.hrSystemMaxProcesses</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="NumberOfProcesses" TYPE="uint32">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Number of process contexts currently loaded or running on the OperatingSystem.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Gauge" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|Host System|001.5</VALUE>
<VALUE>MIB.IETF|HOST-RESOURCES-MIB.hrSystemProcesses</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="NumberOfUsers" TYPE="uint32">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Number of user sessions for which the OperatingSystem is currently storing state information.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Gauge" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|Host System|001.4</VALUE>
<VALUE>MIB.IETF|HOST-RESOURCES-MIB.hrSystemNumUsers</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="NumberOfLicensedUsers" TYPE="uint32">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Number of user licenses for the OperatingSystem. If unlimited, enter 0.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="CurrentTimeZone" TYPE="sint16">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>CurrentTimeZone indicates the number of minutes the OperatingSystem is offset from Greenwich Mean Time. Either the number is positive, negative or zero.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>Minutes</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="LocalDateTime" TYPE="datetime">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>OperatingSystem\&apos;s notion of the local date and time of day.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIB.IETF|HOST-RESOURCES-MIB.hrSystemDate</VALUE>
<VALUE>MIF.DMTF|General Information|001.6</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="LastBootUpTime" TYPE="datetime">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Time when the OperatingSystem was last booted.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|General Information|001.5</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="Version" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A string describing the Operating System\&apos;s version number. The format of the version information is as follows: &lt;Major Number&gt;.&lt;Minor Number&gt;.&lt;Revision&gt; or &lt;Major Number&gt;.&lt;Minor Number&gt;.&lt;Revision Letter&gt;.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|Operating System|001.3</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="OtherTypeDescription" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A string describing the manufacturer and OperatingSystem type - used when the OperatingSystem property, OSType, is set to 1 or 59 (&quot;Other&quot; or &quot;Dedicated&quot;). The format of the string inserted in OtherTypeDescription should be similar in format to the Values strings defined for OSType. OtherTypeDescription should be set to NULL when OSType is any value other than 1 or 59.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>64</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ModelCorrespondence" TYPE="string">
<VALUE.ARRAY>
<VALUE>CIM_OperatingSystem.OSType</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="OSType" TYPE="uint16">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A integer indicating the type of OperatingSystem.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ValueMap" TYPE="string">
<VALUE.ARRAY>
<VALUE>0</VALUE>
<VALUE>1</VALUE>
<VALUE>2</VALUE>
<VALUE>3</VALUE>
<VALUE>4</VALUE>
<VALUE>5</VALUE>
<VALUE>6</VALUE>
<VALUE>7</VALUE>
<VALUE>8</VALUE>
<VALUE>9</VALUE>
<VALUE>10</VALUE>
<VALUE>11</VALUE>
<VALUE>12</VALUE>
<VALUE>13</VALUE>
<VALUE>14</VALUE>
<VALUE>15</VALUE>
<VALUE>16</VALUE>
<VALUE>17</VALUE>
<VALUE>18</VALUE>
<VALUE>19</VALUE>
<VALUE>20</VALUE>
<VALUE>21</VALUE>
<VALUE>22</VALUE>
<VALUE>23</VALUE>
<VALUE>24</VALUE>
<VALUE>25</VALUE>
<VALUE>26</VALUE>
<VALUE>27</VALUE>
<VALUE>28</VALUE>
<VALUE>29</VALUE>
<VALUE>30</VALUE>
<VALUE>31</VALUE>
<VALUE>32</VALUE>
<VALUE>33</VALUE>
<VALUE>34</VALUE>
<VALUE>35</VALUE>
<VALUE>36</VALUE>
<VALUE>37</VALUE>
<VALUE>38</VALUE>
<VALUE>39</VALUE>
<VALUE>40</VALUE>
<VALUE>41</VALUE>
<VALUE>42</VALUE>
<VALUE>43</VALUE>
<VALUE>44</VALUE>
<VALUE>45</VALUE>
<VALUE>46</VALUE>
<VALUE>47</VALUE>
<VALUE>48</VALUE>
<VALUE>49</VALUE>
<VALUE>50</VALUE>
<VALUE>51</VALUE>
<VALUE>52</VALUE>
<VALUE>53</VALUE>
<VALUE>54</VALUE>
<VALUE>55</VALUE>
<VALUE>56</VALUE>
<VALUE>57</VALUE>
<VALUE>58</VALUE>
<VALUE>59</VALUE>
<VALUE>60</VALUE>
<VALUE>61</VALUE>
<VALUE>62</VALUE>
<VALUE>63</VALUE>
<VALUE>64</VALUE>
<VALUE>65</VALUE>
<VALUE>66</VALUE>
<VALUE>67</VALUE>
<VALUE>68</VALUE>
<VALUE>69</VALUE>
<VALUE>70</VALUE>
<VALUE>71</VALUE>
<VALUE>72</VALUE>
<VALUE>73</VALUE>
<VALUE>74</VALUE>
<VALUE>75</VALUE>
<VALUE>76</VALUE>
<VALUE>77</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="Values" TYPE="string">
<VALUE.ARRAY>
<VALUE>Unknown</VALUE>
<VALUE>Other</VALUE>
<VALUE>MACOS</VALUE>
<VALUE>ATTUNIX</VALUE>
<VALUE>DGUX</VALUE>
<VALUE>DECNT</VALUE>
<VALUE>Tru64 UNIX</VALUE>
<VALUE>OpenVMS</VALUE>
<VALUE>HPUX</VALUE>
<VALUE>AIX</VALUE>
<VALUE>MVS</VALUE>
<VALUE>OS400</VALUE>
<VALUE>OS/2</VALUE>
<VALUE>JavaVM</VALUE>
<VALUE>MSDOS</VALUE>
<VALUE>WIN3x</VALUE>
<VALUE>WIN95</VALUE>
<VALUE>WIN98</VALUE>
<VALUE>WINNT</VALUE>
<VALUE>WINCE</VALUE>
<VALUE>NCR3000</VALUE>
<VALUE>NetWare</VALUE>
<VALUE>OSF</VALUE>
<VALUE>DC/OS</VALUE>
<VALUE>Reliant UNIX</VALUE>
<VALUE>SCO UnixWare</VALUE>
<VALUE>SCO OpenServer</VALUE>
<VALUE>Sequent</VALUE>
<VALUE>IRIX</VALUE>
<VALUE>Solaris</VALUE>
<VALUE>SunOS</VALUE>
<VALUE>U6000</VALUE>
<VALUE>ASERIES</VALUE>
<VALUE>HP NonStop OS</VALUE>
<VALUE>HP NonStop OSS</VALUE>
<VALUE>BS2000</VALUE>
<VALUE>LINUX</VALUE>
<VALUE>Lynx</VALUE>
<VALUE>XENIX</VALUE>
<VALUE>VM</VALUE>
<VALUE>Interactive UNIX</VALUE>
<VALUE>BSDUNIX</VALUE>
<VALUE>FreeBSD</VALUE>
<VALUE>NetBSD</VALUE>
<VALUE>GNU Hurd</VALUE>
<VALUE>OS9</VALUE>
<VALUE>MACH Kernel</VALUE>
<VALUE>Inferno</VALUE>
<VALUE>QNX</VALUE>
<VALUE>EPOC</VALUE>
<VALUE>IxWorks</VALUE>
<VALUE>VxWorks</VALUE>
<VALUE>MiNT</VALUE>
<VALUE>BeOS</VALUE>
<VALUE>HP MPE</VALUE>
<VALUE>NextStep</VALUE>
<VALUE>PalmPilot</VALUE>
<VALUE>Rhapsody</VALUE>
<VALUE>Windows 2000</VALUE>
<VALUE>Dedicated</VALUE>
<VALUE>OS/390</VALUE>
<VALUE>VSE</VALUE>
<VALUE>TPF</VALUE>
<VALUE>Windows (R) Me</VALUE>
<VALUE>Caldera Open UNIX</VALUE>
<VALUE>OpenBSD</VALUE>
<VALUE>Not Applicable</VALUE>
<VALUE>Windows XP</VALUE>
<VALUE>z/OS</VALUE>
<VALUE>Microsoft Windows Server 2003</VALUE>
<VALUE>Microsoft Windows Server 2003 64-Bit</VALUE>
<VALUE>Windows XP 64-Bit</VALUE>
<VALUE>Windows XP Embedded</VALUE>
<VALUE>Windows Vista</VALUE>
<VALUE>Windows Vista 64-Bit</VALUE>
<VALUE>Windows Embedded for Point of Service</VALUE>
<VALUE>Microsoft Windows Server 2008</VALUE>
<VALUE>Microsoft Windows Server 2008 64-Bit</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="ModelCorrespondence" TYPE="string">
<VALUE.ARRAY>
<VALUE>CIM_OperatingSystem.OtherTypeDescription</VALUE>
<VALUE>CIM_SoftwareElement.TargetOperatingSystem</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="Name" TYPE="string">
<QUALIFIER NAME="Key" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Override" TYPE="string">
<VALUE>Name</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The inherited Name serves as key of an OperatingSystem instance within a ComputerSystem.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>256</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|Operating System|001.2</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="CreationClassName" TYPE="string">
<QUALIFIER NAME="Key" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>256</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="CSName" TYPE="string">
<QUALIFIER NAME="Key" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The scoping ComputerSystem\&apos;s Name.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>256</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Propagated" TYPE="string">
<VALUE>CIM_ComputerSystem.Name</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="CSCreationClassName" TYPE="string">
<QUALIFIER NAME="Key" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The scoping ComputerSystem\&apos;s CreationClassName.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>256</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Propagated" TYPE="string">
<VALUE>CIM_ComputerSystem.CreationClassName</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="ElementName" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A user-friendly name for the object. This property allows each instance to define a user-friendly name in addition to its key properties, identity data, and description information. \nNote that the Name property of ManagedSystemElement is also defined as a user-friendly name. But, it is often subclassed to be a Key. It is not reasonable that the same property can convey both identity and a user-friendly name, without inconsistencies. Where Name exists and is not a Key (such as for instances of LogicalDevice), the same information can be present in both the Name and ElementName properties.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="Description" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The Description property provides a textual description of the object.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="Caption" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The Caption property is a short textual description (one- line string) of the object.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>64</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="InstallDate" TYPE="datetime">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A datetime value that indicates when the object was installed. Lack of a value does not indicate that the object is not installed.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MappingStrings" TYPE="string">
<VALUE.ARRAY>
<VALUE>MIF.DMTF|ComponentID|001.5</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY.ARRAY NAME="OperationalStatus" TYPE="uint16">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Indicates the current statuses of the element. Various operational statuses are defined. Many of the enumeration\&apos;s values are self-explanatory. However, a few are not and are described here in more detail. \n&quot;Stressed&quot; indicates that the element is functioning, but needs attention. Examples of &quot;Stressed&quot; states are overload, overheated, and so on. \n&quot;Predictive Failure&quot; indicates that an element is functioning nominally but predicting a failure in the near future. \n&quot;In Service&quot; describes an element being configured, maintained, cleaned, or otherwise administered. \n&quot;No Contact&quot; indicates that the monitoring system has knowledge of this element, but has never been able to establish communications with it. \n&quot;Lost Communication&quot; indicates that the ManagedSystem Element is known to exist and has been contacted successfully in the past, but is currently unreachable. \n&quot;Stopped&quot; and &quot;Aborted&quot; are similar, although the former implies a clean and orderly stop, while the latter implies an abrupt stop where the state and configuration of the element might need to be updated. \n&quot;Dormant&quot; indicates that the element is inactive or quiesced. \n&quot;Supporting Entity in Error&quot; indicates that this element might be &quot;OK&quot; but that another element, on which it is dependent, is in error. An example is a network service or endpoint that cannot function due to lower-layer networking problems. \n&quot;Completed&quot; indicates that the element has completed its operation. This value should be combined with either OK, Error, or Degraded so that a client can tell if the complete operation Completed with OK (passed), Completed with Error (failed), or Completed with Degraded (the operation finished, but it did not complete OK or did not report an error). \n&quot;Power Mode&quot; indicates that the element has additional power model information contained in the Associated PowerManagementService association. \nOperationalStatus replaces the Status property on ManagedSystemElement to provide a consistent approach to enumerations, to address implementation needs for an array property, and to provide a migration path from today\&apos;s environment to the future. This change was not made earlier because it required the deprecated qualifier. Due to the widespread use of the existing Status property in management applications, it is strongly recommended that providers or instrumentation provide both the Status and OperationalStatus properties. Further, the first value of OperationalStatus should contain the primary status for the element. When instrumented, Status (because it is single-valued) should also provide the primary status of the element.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ValueMap" TYPE="string">
<VALUE.ARRAY>
<VALUE>0</VALUE>
<VALUE>1</VALUE>
<VALUE>2</VALUE>
<VALUE>3</VALUE>
<VALUE>4</VALUE>
<VALUE>5</VALUE>
<VALUE>6</VALUE>
<VALUE>7</VALUE>
<VALUE>8</VALUE>
<VALUE>9</VALUE>
<VALUE>10</VALUE>
<VALUE>11</VALUE>
<VALUE>12</VALUE>
<VALUE>13</VALUE>
<VALUE>14</VALUE>
<VALUE>15</VALUE>
<VALUE>16</VALUE>
<VALUE>17</VALUE>
<VALUE>18</VALUE>
<VALUE>..</VALUE>
<VALUE>0x8000..</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="Values" TYPE="string">
<VALUE.ARRAY>
<VALUE>Unknown</VALUE>
<VALUE>Other</VALUE>
<VALUE>OK</VALUE>
<VALUE>Degraded</VALUE>
<VALUE>Stressed</VALUE>
<VALUE>Predictive Failure</VALUE>
<VALUE>Error</VALUE>
<VALUE>Non-Recoverable Error</VALUE>
<VALUE>Starting</VALUE>
<VALUE>Stopping</VALUE>
<VALUE>Stopped</VALUE>
<VALUE>In Service</VALUE>
<VALUE>No Contact</VALUE>
<VALUE>Lost Communication</VALUE>
<VALUE>Aborted</VALUE>
<VALUE>Dormant</VALUE>
<VALUE>Supporting Entity in Error</VALUE>
<VALUE>Completed</VALUE>
<VALUE>Power Mode</VALUE>
<VALUE>DMTF Reserved</VALUE>
<VALUE>Vendor Reserved</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="ArrayType" TYPE="string">
<VALUE>Indexed</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ModelCorrespondence" TYPE="string">
<VALUE.ARRAY>
<VALUE>CIM_ManagedSystemElement.StatusDescriptions</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY.ARRAY>
<PROPERTY.ARRAY NAME="StatusDescriptions" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Strings describing the various OperationalStatus array values. For example, if &quot;Stopping&quot; is the value assigned to OperationalStatus, then this property may contain an explanation as to why an object is being stopped. Note that entries in this array are correlated with those at the same array index in OperationalStatus.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ArrayType" TYPE="string">
<VALUE>Indexed</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ModelCorrespondence" TYPE="string">
<VALUE.ARRAY>
<VALUE>CIM_ManagedSystemElement.OperationalStatus</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY.ARRAY>
<PROPERTY NAME="Status" TYPE="string">
<QUALIFIER NAME="Deprecated" TYPE="string">
<VALUE.ARRAY>
<VALUE>CIM_ManagedSystemElement.OperationalStatus</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A string indicating the current status of the object. Various operational and non-operational statuses are defined. This property is deprecated in lieu of OperationalStatus, which includes the same semantics in its enumeration. This change is made for 3 reasons: \n1) Status is more correctly defined as an array. This definition overcomes the limitation of describing status using a single value, when it is really a multi-valued property (for example, an element might be OK AND Stopped. \n2) A MaxLen of 10 is too restrictive and leads to unclear enumerated values. \n3) The change to a uint16 data type was discussed when CIM V2.0 was defined. However, existing V1.0 implementations used the string property and did not want to modify their code. Therefore, Status was grandfathered into the Schema. Use of the deprecated qualifier allows the maintenance of the existing property, but also permits an improved definition using OperationalStatus.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ValueMap" TYPE="string">
<VALUE.ARRAY>
<VALUE>OK</VALUE>
<VALUE>Error</VALUE>
<VALUE>Degraded</VALUE>
<VALUE>Unknown</VALUE>
<VALUE>Pred Fail</VALUE>
<VALUE>Starting</VALUE>
<VALUE>Stopping</VALUE>
<VALUE>Service</VALUE>
<VALUE>Stressed</VALUE>
<VALUE>NonRecover</VALUE>
<VALUE>No Contact</VALUE>
<VALUE>Lost Comm</VALUE>
<VALUE>Stopped</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>10</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="HealthState" TYPE="uint16">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Indicates the current health of the element. This attribute expresses the health of this element but not necessarily that of its subcomponents. The possible values are 0 to 30, where 5 means the element is entirely healthy and 30 means the element is completely non-functional. The following continuum is defined: \n&quot;Non-recoverable Error&quot; (30) - The element has completely failed, and recovery is not possible. All functionality provided by this element has been lost. \n&quot;Critical Failure&quot; (25) - The element is non-functional and recovery might not be possible. \n&quot;Major Failure&quot; (20) - The element is failing. It is possible that some or all of the functionality of this component is degraded or not working. \n&quot;Minor Failure&quot; (15) - All functionality is available but some might be degraded. \n&quot;Degraded/Warning&quot; (10) - The element is in working order and all functionality is provided. However, the element is not working to the best of its abilities. For example, the element might not be operating at optimal performance or it might be reporting recoverable errors. \n&quot;OK&quot; (5) - The element is fully functional and is operating within normal operational parameters and without error. \n&quot;Unknown&quot; (0) - The implementation cannot report on HealthState at this time. \nDMTF has reserved the unused portion of the continuum for additional HealthStates in the future.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ValueMap" TYPE="string">
<VALUE.ARRAY>
<VALUE>0</VALUE>
<VALUE>5</VALUE>
<VALUE>10</VALUE>
<VALUE>15</VALUE>
<VALUE>20</VALUE>
<VALUE>25</VALUE>
<VALUE>30</VALUE>
<VALUE>..</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="Values" TYPE="string">
<VALUE.ARRAY>
<VALUE>Unknown</VALUE>
<VALUE>OK</VALUE>
<VALUE>Degraded/Warning</VALUE>
<VALUE>Minor failure</VALUE>
<VALUE>Major failure</VALUE>
<VALUE>Critical failure</VALUE>
<VALUE>Non-recoverable error</VALUE>
<VALUE>DMTF Reserved</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="EnabledState" TYPE="uint16">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>EnabledState is an integer enumeration that indicates the enabled and disabled states of an element. It can also indicate the transitions between these requested states. For example, shutting down (value=4) and starting (value=10) are transient states between enabled and disabled. The following text briefly summarizes the various enabled and disabled states: \nEnabled (2) indicates that the element is or could be executing commands, will process any queued commands, and queues new requests. \nDisabled (3) indicates that the element will not execute commands and will drop any new requests. \nShutting Down (4) indicates that the element is in the process of going to a Disabled state. \nNot Applicable (5) indicates the element does not support being enabled or disabled. \nEnabled but Offline (6) indicates that the element might be completing commands, and will drop any new requests. \nTest (7) indicates that the element is in a test state. \nDeferred (8) indicates that the element might be completing commands, but will queue any new requests. \nQuiesce (9) indicates that the element is enabled but in a restricted mode.\nStarting (10) indicates that the element is in the process of going to an Enabled state. New requests are queued.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ValueMap" TYPE="string">
<VALUE.ARRAY>
<VALUE>0</VALUE>
<VALUE>1</VALUE>
<VALUE>2</VALUE>
<VALUE>3</VALUE>
<VALUE>4</VALUE>
<VALUE>5</VALUE>
<VALUE>6</VALUE>
<VALUE>7</VALUE>
<VALUE>8</VALUE>
<VALUE>9</VALUE>
<VALUE>10</VALUE>
<VALUE>11..32767</VALUE>
<VALUE>32768..65535</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="Values" TYPE="string">
<VALUE.ARRAY>
<VALUE>Unknown</VALUE>
<VALUE>Other</VALUE>
<VALUE>Enabled</VALUE>
<VALUE>Disabled</VALUE>
<VALUE>Shutting Down</VALUE>
<VALUE>Not Applicable</VALUE>
<VALUE>Enabled but Offline</VALUE>
<VALUE>In Test</VALUE>
<VALUE>Deferred</VALUE>
<VALUE>Quiesce</VALUE>
<VALUE>Starting</VALUE>
<VALUE>DMTF Reserved</VALUE>
<VALUE>Vendor Reserved</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="ModelCorrespondence" TYPE="string">
<VALUE.ARRAY>
<VALUE>CIM_EnabledLogicalElement.OtherEnabledState</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<VALUE>5</VALUE>
</PROPERTY>
<PROPERTY NAME="OtherEnabledState" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A string that describes the enabled or disabled state of the element when the EnabledState property is set to 1 (&quot;Other&quot;). This property must be set to null when EnabledState is any value other than 1.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ModelCorrespondence" TYPE="string">
<VALUE.ARRAY>
<VALUE>CIM_EnabledLogicalElement.EnabledState</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="RequestedState" TYPE="uint16">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>RequestedState is an integer enumeration that indicates the last requested or desired state for the element, irrespective of the mechanism through which it was requested. The actual state of the element is represented by EnabledState. This property is provided to compare the last requested and current enabled or disabled states. Note that when EnabledState is set to 5 (&quot;Not Applicable&quot;), then this property has no meaning. Refer to the EnabledState property description for explanations of the values in the RequestedState enumeration. \n&quot;Unknown&quot; (0) indicates the last requested state for the element is unknown.\nNote that the value &quot;No Change&quot; (5) has been deprecated in lieu of indicating the last requested state is &quot;Unknown&quot; (0). If the last requested or desired state is unknown, RequestedState should have the value &quot;Unknown&quot; (0), but may have the value &quot;No Change&quot; (5).Offline (6) indicates that the element has been requested to transition to the Enabled but Offline EnabledState. \nIt should be noted that there are two new values in RequestedState that build on the statuses of EnabledState. These are &quot;Reboot&quot; (10) and &quot;Reset&quot; (11). Reboot refers to doing a &quot;Shut Down&quot; and then moving to an &quot;Enabled&quot; state. Reset indicates that the element is first &quot;Disabled&quot; and then &quot;Enabled&quot;. The distinction between requesting &quot;Shut Down&quot; and &quot;Disabled&quot; should also be noted. Shut Down requests an orderly transition to the Disabled state, and might involve removing power, to completely erase any existing state. The Disabled state requests an immediate disabling of the element, such that it will not execute or accept any commands or processing requests. \n\nThis property is set as the result of a method invocation (such as Start or StopService on CIM_Service), or can be overridden and defined as WRITEable in a subclass. The method approach is considered superior to a WRITEable property, because it allows an explicit invocation of the operation and the return of a result code. \n\nIf knowledge of the last RequestedState is not supported for the EnabledLogicalElement, the property shall be NULL or have the value 12 &quot;Not Applicable&quot;.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ValueMap" TYPE="string">
<VALUE.ARRAY>
<VALUE>0</VALUE>
<VALUE>2</VALUE>
<VALUE>3</VALUE>
<VALUE>4</VALUE>
<VALUE>5</VALUE>
<VALUE>6</VALUE>
<VALUE>7</VALUE>
<VALUE>8</VALUE>
<VALUE>9</VALUE>
<VALUE>10</VALUE>
<VALUE>11</VALUE>
<VALUE>12</VALUE>
<VALUE>..</VALUE>
<VALUE>32768..65535</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="Values" TYPE="string">
<VALUE.ARRAY>
<VALUE>Unknown</VALUE>
<VALUE>Enabled</VALUE>
<VALUE>Disabled</VALUE>
<VALUE>Shut Down</VALUE>
<VALUE>No Change</VALUE>
<VALUE>Offline</VALUE>
<VALUE>Test</VALUE>
<VALUE>Deferred</VALUE>
<VALUE>Quiesce</VALUE>
<VALUE>Reboot</VALUE>
<VALUE>Reset</VALUE>
<VALUE>Not Applicable</VALUE>
<VALUE>DMTF Reserved</VALUE>
<VALUE>Vendor Reserved</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="ModelCorrespondence" TYPE="string">
<VALUE.ARRAY>
<VALUE>CIM_EnabledLogicalElement.EnabledState</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<VALUE>12</VALUE>
</PROPERTY>
<PROPERTY NAME="EnabledDefault" TYPE="uint16">
<QUALIFIER NAME="Write" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>An enumerated value indicating an administrator\&apos;s default or startup configuration for the Enabled State of an element. By default, the element is &quot;Enabled&quot; (value=2).</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ValueMap" TYPE="string">
<VALUE.ARRAY>
<VALUE>2</VALUE>
<VALUE>3</VALUE>
<VALUE>5</VALUE>
<VALUE>6</VALUE>
<VALUE>7</VALUE>
<VALUE>9</VALUE>
<VALUE>..</VALUE>
<VALUE>32768..65535</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="Values" TYPE="string">
<VALUE.ARRAY>
<VALUE>Enabled</VALUE>
<VALUE>Disabled</VALUE>
<VALUE>Not Applicable</VALUE>
<VALUE>Enabled but Offline</VALUE>
<VALUE>No Default</VALUE>
<VALUE>Quiesce</VALUE>
<VALUE>DMTF Reserved</VALUE>
<VALUE>Vendor Reserved</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<VALUE>2</VALUE>
</PROPERTY>
<PROPERTY NAME="TimeOfLastStateChange" TYPE="datetime">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The date or time when the EnabledState of the element last changed. If the state of the element has not changed and this property is populated, then it must be set to a 0 interval value. If a state change was requested, but rejected or not yet processed, the property must not be updated.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="LanguageEdition" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The LanguageEdition property indicates the national language version of the installed operating system, for example US English. For many operating systems this value is given as a standard international numeric abbrevation for a country or region. Each language has a unique language identifier that consists of a primary language identifier and a secondary language identifier, for example en-US.If such a language identifier is not available for an operating system the native value from the operating system, that expresses its language version is used, for example ENU.</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="CodeSet" TYPE="string">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The CodeSet property indicates the code page value used by the operating system. A code page contains a character table used by the operating system to translate strings for different languages. The American National Standards Institute (ANSI) lists values that represent defined code pages. Examples are ISO-8859-1, UTF-8 or IBM1047. If the operating system does not use an ANSI code page, this member will be set to 0.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="MaxLen" TYPE="uint32">
<VALUE>64</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="DefaultPageSize" TYPE="uint32">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The default size of pages used by the virtual memory management system in units of bytes. For systems that do not have the concept of virtual memory, 0 MUST be returned. For example the default page size my be 4096 bytes.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>Bytes</VALUE>
</QUALIFIER>
</PROPERTY>
<PROPERTY NAME="PctTotalCPUTime" TYPE="uint16">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Average total cpu time in percents.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Units" TYPE="string">
<VALUE>Percent</VALUE>
</QUALIFIER>
</PROPERTY>
<METHOD NAME="Shutdown" TYPE="uint32">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Requests a shutdown of the OperatingSystem. The return value should be 0 if the request was successfully executed, 1 if the request is not supported and some other value if an error occurred. It is up to the implementation or subclass of OperatingSystem to establish dependencies between the Shutdown and Reboot methods, and for example, to provide more sophisticated capabilities such as scheduled shutdown/ reboot, etc. In a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are \&apos;translated\&apos; may also be specified in the subclass as a Values array qualifier.</VALUE>
</QUALIFIER>
</METHOD>
<METHOD NAME="Reboot" TYPE="uint32">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Requests a reboot of the OperatingSystem. The return value should be 0 if the request was successfully executed, 1 if the request is not supported and some other value if an error occurred. In a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are \&apos;translated\&apos; may also be specified in the subclass as a Values array qualifier.</VALUE>
</QUALIFIER>
</METHOD>
<METHOD NAME="RequestStateChange" TYPE="uint32">
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>Requests that the state of the element be changed to the value specified in the RequestedState parameter. When the requested state change takes place, the EnabledState and RequestedState of the element will be the same. Invoking the RequestStateChange method multiple times could result in earlier requests being overwritten or lost. \nA return code of 0 shall indicate the state change was successfully initiated. \nA return code of 3 shall indicate that the state transition cannot complete within the interval specified by the TimeoutPeriod parameter. \nA return code of 4096 (0x1000) shall indicate the state change was successfully initiated, a ConcreteJob has been created, and its reference returned in the output parameter Job. Any other return code indicates an error condition.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ValueMap" TYPE="string">
<VALUE.ARRAY>
<VALUE>0</VALUE>
<VALUE>1</VALUE>
<VALUE>2</VALUE>
<VALUE>3</VALUE>
<VALUE>4</VALUE>
<VALUE>5</VALUE>
<VALUE>6</VALUE>
<VALUE>..</VALUE>
<VALUE>4096</VALUE>
<VALUE>4097</VALUE>
<VALUE>4098</VALUE>
<VALUE>4099</VALUE>
<VALUE>4100..32767</VALUE>
<VALUE>32768..65535</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="Values" TYPE="string">
<VALUE.ARRAY>
<VALUE>Completed with No Error</VALUE>
<VALUE>Not Supported</VALUE>
<VALUE>Unknown or Unspecified Error</VALUE>
<VALUE>Cannot complete within Timeout Period</VALUE>
<VALUE>Failed</VALUE>
<VALUE>Invalid Parameter</VALUE>
<VALUE>In Use</VALUE>
<VALUE>DMTF Reserved</VALUE>
<VALUE>Method Parameters Checked - Job Started</VALUE>
<VALUE>Invalid State Transition</VALUE>
<VALUE>Use of Timeout Parameter Not Supported</VALUE>
<VALUE>Busy</VALUE>
<VALUE>Method Reserved</VALUE>
<VALUE>Vendor Specific</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="ModelCorrespondence" TYPE="string">
<VALUE.ARRAY>
<VALUE>CIM_EnabledLogicalElement.RequestedState</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<PARAMETER NAME="RequestedState" TYPE="uint16">
<QUALIFIER NAME="IN" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>The state requested for the element. This information will be placed into the RequestedState property of the instance if the return code of the RequestStateChange method is 0 (\&apos;Completed with No Error\&apos;), or 4096 (0x1000) (\&apos;Job Started\&apos;). Refer to the description of the EnabledState and RequestedState properties for the detailed explanations of the RequestedState values.</VALUE>
</QUALIFIER>
<QUALIFIER NAME="ValueMap" TYPE="string">
<VALUE.ARRAY>
<VALUE>2</VALUE>
<VALUE>3</VALUE>
<VALUE>4</VALUE>
<VALUE>6</VALUE>
<VALUE>7</VALUE>
<VALUE>8</VALUE>
<VALUE>9</VALUE>
<VALUE>10</VALUE>
<VALUE>11</VALUE>
<VALUE>..</VALUE>
<VALUE>32768..65535</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="Values" TYPE="string">
<VALUE.ARRAY>
<VALUE>Enabled</VALUE>
<VALUE>Disabled</VALUE>
<VALUE>Shut Down</VALUE>
<VALUE>Offline</VALUE>
<VALUE>Test</VALUE>
<VALUE>Defer</VALUE>
<VALUE>Quiesce</VALUE>
<VALUE>Reboot</VALUE>
<VALUE>Reset</VALUE>
<VALUE>DMTF Reserved</VALUE>
<VALUE>Vendor Reserved</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
<QUALIFIER NAME="ModelCorrespondence" TYPE="string">
<VALUE.ARRAY>
<VALUE>CIM_EnabledLogicalElement.RequestedState</VALUE>
</VALUE.ARRAY>
</QUALIFIER>
</PARAMETER>
<PARAMETER.REFERENCE NAME="Job" REFERENCECLASS="CIM_ConcreteJob">
<QUALIFIER NAME="IN" TYPE="boolean">
<VALUE>FALSE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="OUT" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>May contain a reference to the ConcreteJob created to track the state transition initiated by the method invocation.</VALUE>
</QUALIFIER>
</PARAMETER.REFERENCE>
<PARAMETER NAME="TimeoutPeriod" TYPE="datetime">
<QUALIFIER NAME="IN" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
<QUALIFIER NAME="Description" TYPE="string">
<VALUE>A timeout period that specifies the maximum amount of time that the client expects the transition to the new state to take. The interval format must be used to specify the TimeoutPeriod. A value of 0 or a null parameter indicates that the client has no time requirements for the transition. \nIf this property does not contain 0 or null and the implementation does not support this parameter, a return code of \&apos;Use Of Timeout Parameter Not Supported\&apos; shall be returned.</VALUE>
</QUALIFIER>
</PARAMETER>
</METHOD>
<METHOD NAME="execCmd" TYPE="uint8">
<PARAMETER NAME="cmd" TYPE="string">
<QUALIFIER NAME="IN" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
</PARAMETER>
<PARAMETER NAME="out" TYPE="string">
<QUALIFIER NAME="OUT" TYPE="boolean">
<VALUE>TRUE</VALUE>
</QUALIFIER>
</PARAMETER>
</METHOD>
</CLASS>
</IRETURNVALUE>
</IMETHODRESPONSE>
</SIMPLERSP>
</MESSAGE>
</CIM>
